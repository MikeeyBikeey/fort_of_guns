<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize

sprite = xCreateRandomSprite(sGunBase, sGunStockBarrel);

xDistributeRandomlySteal(
    350,
    100,
    "s_bullet_spd",
    "s_accuracy",
    "s_shoot_time",
    "s_num_bullets",
    "s_mag_size",
    "s_kickback",
    "s_focus_spd",
);

//damage
damage = 1;

// bullet_spd
var bullet_width = sprite_get_width(sBullet);
bullet_spd = bullet_width * 2 + bullet_width * (s_bullet_spd / 100 * 2);
if s_bullet_spd == 100 {
    bullet_spd = bullet_width * 5;
}

// accuracy
accuracy = 15 + (1 - s_accuracy / 100) * 30;

// shoot_time
shoot_time = ceil((1 - s_shoot_time / 100) * xSeconds(0.25));

// num_bullets
num_bullets = 1;
if s_num_bullets &gt; 90 {
    num_bullets = 3;
} else if s_num_bullets &gt; 75 {
    num_bullets = 2;
} else if s_num_bullets == 100 {
    num_bullets = 5;
}

// mag_size
mag_size = 10 + ceil((s_mag_size / 100 * 40));

// kickback
kickback = (1 - s_kickback / 100) * 15;

// focus_spd
focus_spd = s_focus_spd / 100 * 3;

// reload_time
//reload_time = xSeconds(1) + ceil((1 - s_reload_time / 100) * xSeconds(4));
reload_time = ceil(xSeconds(3));

follow = false;
//vampire = choose(true, false);
//bounce = choose(true, false);
endless_clip = false;

/*

// TODO: a bad stat?
// TODO: low tier guns have lower max stat values?

xDistributeUpgradesRandomly(
    20,
//    "s_damage", 10, 1,
    "s_bullet_spd", 1, 5,
    "s_accuracy", 1, 5,
    "s_shoot_time", 1, 5,
    "s_num_bullets", 10, 2,
    "s_reload_time", 1, 5,
    "s_mag_size", 1, 5,
);

//damage
damage = 1;

// bullet_spd
var bullet_width = sprite_get_width(sBullet);
switch s_bullet_spd {
case 0: bullet_spd = bullet_width; break;
case 1: bullet_spd = bullet_width * 2; break;
case 2: bullet_spd = bullet_width * 2.25; break;
case 3: bullet_spd = bullet_width * 2.5; break;
case 4: bullet_spd = bullet_width * 2.75; break;
default: bullet_spd = bullet_width * 3; break;
}

// accuracy
switch s_accuracy {
case 0: accuracy = 30; break;
case 1: accuracy = 15; break;
case 2: accuracy = 10; break;
case 3: accuracy = 8; break;
case 4: accuracy = 4; break;
default: accuracy = 0; break;
}

// shoot_time
switch s_shoot_time {
case 0: shoot_time = xSeconds(1); break;
case 1: shoot_time = ceil(xSeconds(1) / 2); break;
case 2: shoot_time = ceil(xSeconds(1) / 3); break;
case 3: shoot_time = ceil(xSeconds(1) / 4); break;
case 4: shoot_time = ceil(xSeconds(1) / 5); break;
default: shoot_time = ceil(xSeconds(1) / 6); break;
}

// num_bullets
switch s_num_bullets {
case 0: num_bullets = 1; break;
case 1: num_bullets = 2; break;
default: num_bullets = 3; break;
}

// reload_time
switch s_reload_time {
case 0: reload_time = xSeconds(6); break;
case 1: reload_time = xSeconds(5); break;
case 2: reload_time = xSeconds(4); break;
case 3: reload_time = xSeconds(3); break;
case 4: reload_time = xSeconds(2); break;
default: reload_time = xSeconds(1); break;
}

// mag_size
switch s_mag_size {
case 0: mag_size = 3; break;
case 1: mag_size = 6; break;
case 2: mag_size = 8; break;
case 3: mag_size = 10; break;
case 4: mag_size = 15; break;
default: mag_size = 20; break;
}

follow = false;
//vampire = choose(true, false);
//bounce = choose(true, false);
endless_clip = false;

*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///delete sprite

sprite_delete(sprite);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
