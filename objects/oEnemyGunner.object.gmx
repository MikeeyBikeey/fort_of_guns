<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGunnerLower</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oParentEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>xPushable</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize

xHealthInit(3, xHealthHurtEnemyGunner);

shoot_dir = 0;
gun_id = 0;
handgun = noone;

safe_dist = irandom_range(64, 98);
safe_angle = 0;
angle_change = choose(5, -5);

turn_div = 8;
normal_spd = 4;
reloading_spd = normal_spd / 2;
spd = normal_spd;

ai = false;
alarm[1] = ceil(xSeconds(0.5));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy gun

instance_destroy(handgun);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///enable ai

ai = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop glowing

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///circle player

var target = instance_nearest(x, y, oPlayer);
if ai &amp;&amp; instance_exists(target) &amp;&amp; instance_exists(handgun) {
    if handgun.reloading {
        speed = reloading_spd;
    } else {
        speed = normal_spd;
    }
    if handgun.reloading {
        var run_dir = point_direction(target.x, target.y, x, y);
        direction -= angle_difference(direction, run_dir) / turn_div;
    } else {
        var xsafe = target.x + lengthdir_x(safe_dist, safe_angle);
        var ysafe = target.y + lengthdir_y(safe_dist, safe_angle);
        
        var run_dir = point_direction(x, y, xsafe, ysafe);
        direction -= angle_difference(direction, run_dir) / turn_div;
        
        if point_distance(x, y, xsafe, ysafe) &lt; sprite_width {
            safe_angle = (safe_angle + angle_change) % 360;
        }
    }
}

/*
if instance_exists(handgun) {
    if handgun.reloading {
        spd = reloading_spd;
    } else {
        spd = normal_spd;
    }
}

var target = instance_nearest(x, y, oPlayer);
if ai &amp;&amp; instance_exists(target) &amp;&amp; instance_exists(handgun) {
    if handgun.reloading {
        var run_dir = point_direction(target.x, target.y, x, y);
        x += lengthdir_x(spd, run_dir);
        y += lengthdir_y(spd, run_dir);
    } else {
        var xsafe = target.x + lengthdir_x(safe_dist, safe_angle);
        var ysafe = target.y + lengthdir_y(safe_dist, safe_angle);
        
        x += lengthdir_x(spd, point_direction(x, y, xsafe, ysafe));
        y += lengthdir_y(spd, point_direction(x, y, xsafe, ysafe));
        
        if point_distance(x, y, xsafe, ysafe) &lt; sprite_width {
            safe_angle = (safe_angle + angle_change) % 360;
        }
    }
}
*/

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>xStayInRoom</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shoot gun at player


if instance_exists(handgun) {
    if ai {
        if handgun.reloading {
            var target = instance_nearest(x, y, oPlayer);
            if instance_exists(target) {
                var plr_dir = point_direction(target.x, target.y, x, y);
                shoot_dir -= (angle_difference(shoot_dir, plr_dir) / 8) % 360;
                if shoot_dir &lt; 0 {
                    shoot_dir += 360;
                }
                xHandGunMoveToOwner(handgun, id, shoot_dir);
            }
        } else {
            var target = instance_nearest(x, y, oPlayer);
            if instance_exists(target) {
                var plr_dir = point_direction(x, y, target.x, target.y);
                shoot_dir -= (angle_difference(shoot_dir, plr_dir) / 8) % 360;
                if shoot_dir &lt; 0 {
                    shoot_dir += 360;
                }
                xHandGunMoveToOwner(handgun, id, shoot_dir);
                xHandGunPullTrigger(handgun);
            }
        }
    } else {
        xHandGunMoveToOwner(handgun, id, 0);
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>xZIndex</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw self and red blink

if alarm[0] != -1 {
    image_blend = c_green;
} else {
    image_blend = c_white;
}

draw_self();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw hand gun

if instance_exists(handgun) {
    var gun_dir = handgun.image_angle;
    
    var yscale = 1;
    if gun_dir &gt; 90 &amp;&amp; gun_dir &lt; 270 {
        yscale = -1;
    }
    
    draw_sprite_ext(
        sGunnerUpper,
        1,
        x,
        y,
        abs(image_xscale),
        image_yscale * yscale,
        gun_dir,
        image_blend,
        image_alpha,
    );
    
    //xHandGunDraw(handgun);
    with handgun {
        var gun = xGunGet(gun_id);
        if instance_exists(gun) {
            draw_sprite_ext(gun.sprite, image_index, x, y, image_xscale, image_yscale, image_angle, other.image_blend, image_alpha); 
        }
    }
    
    draw_sprite_ext(
        sGunnerUpper,
        0,
        x,
        y,
        abs(image_xscale),
        image_yscale * yscale,
        gun_dir,
        image_blend,
        image_alpha,
    );
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw health

xDrawHearts(id, x, y - 8);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw mags

if instance_exists(handgun) {
    xHandGunDrawMags(handgun, x, y - 16);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw reload

if instance_exists(handgun) &amp;&amp; handgun.reloading {
    xHandGunDrawReload(handgun, x, y + 8);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
